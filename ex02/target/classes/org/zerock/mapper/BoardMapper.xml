<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mtbatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.zerock.mapper.BoardMapper">

<!-- 게시글 전체 조회 -->
<select id="getList" resultType="org.zerock.domain.BoardVO">
	<![CDATA[
		select * from tbl_board where bno > 0 order by cdate desc
	]]>
</select>

<!-- 게시글의 페이지 번호와 읽어올 개수에 따라 게시글을 조회하는 함수 -->
<select id ="getListWithPaging" resultType="org.zerock.domain.BoardVO">
	<![CDATA[
		select *
		from
			(select /*+ INDEX_DESC(tbl_board pk_board) */
			 		rownum rn, bno, title, content, writer, cdate, udate
			 from tbl_board
			 where rownum <= #{pageNum} * #{amount}
			)
		where rn > (#{pageNum} - 1) * #{amount}
	]]>
</select>

<!-- 게시글 삽입 : insert 처리 후 생성된 PK값을 알 필요 없는 경우 -->
<insert id="insert">
	insert into tbl_board (bno, title, content, writer)
	values (seq_board.nextval, #{title}, #{content}, #{writer})
</insert>

<!-- 게시글 삽입 : insert 처리 후 생성된 PK값을 알아야 할 경우 -->
<insert id="insertSelectKey">
	<!-- @SelectKey라는 MyBatis의 어노테이션을 이용한다. 
		미리(Before) SQL을 통해 처리해주고 특정한 이름으로 결과를 보관하는 방식 -->
	<selectKey keyProperty="bno" order="BEFORE" resultType="long">
		select seq_board.nextval from dual
	</selectKey>
	
	insert into tbl_board (bno, title, content, writer)
	values (#{bno}, #{title}, #{content}, #{writer})
</insert>

<!-- 게시글 읽기 : 게시글 번호를 통해서 1개의 글 읽어오기 -->
<select id ="get" resultType="org.zerock.domain.BoardVO">
	select * from tbl_board where bno = #{bno}
</select>


<!-- 게시글 삭제 : 특정 게시글을 삭제하기 -->
<delete id="remove">
	delete from tbl_board where bno = #{bno}
</delete>

<!-- 게시글 수정 : 특정 게시글 수정하기 -->
<update id="modify">
	update tbl_board 
	set title=#{title}, 
	content=#{content}, 
	writer=#{writer},
	udate=sysdate
	where bno=#{bno}
</update>

</mapper>